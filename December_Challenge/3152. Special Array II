class Solution {
    public boolean[] isArraySpecial(int[] nums, int[][] queries) {
        int n=nums.length;
        int [] count =new int[n];
        count[0]=0; // initally no faulty parity
        for(int i=1;i<n;i++){
            // get parity if same consequent parity we add 1 else 0
            int parity=(nums[i]%2==nums[i-1]%2)? 1 : 0;
            // previous + current
            count[i]=count[i-1]+parity;
        }
        int m=queries.length;
        boolean res[]=new boolean[m];
        for(int i=0;i<m;i++){
            int start=queries[i][0];
            int end=queries[i][1];
            // count[end] denotes how manuy problem from 0 to end
            // so we subtract to get issues between start and end 
            //if any then not special else special
            res[i]=(count[end]-count[start]==0);
        }
        return res;
    }
}
