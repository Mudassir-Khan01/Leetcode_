class Solution {
    public long minSum(int[] nums1, int[] nums2) {
        long sum1 = 0, sum2 = 0;
        int count1 = 0, count2 = 0;

        for (int num : nums1) {
            if (num == 0) count1++;
            sum1 += num;
        }

        for (int num : nums2) {
            if (num == 0) count2++;
            sum2 += num;
        }

        // If both have 0s, we can always make them equal at some min value
        if (count1 == 0 && count2 == 0) {
            return sum1 == sum2 ? sum1 : -1;
        }

        // If one side has no 0s, and its sum is less than the other side's min possible sum, it's impossible
        if (count1 == 0 && sum1 < sum2 + count2) return -1;
        if (count2 == 0 && sum2 < sum1 + count1) return -1;

        // Replace all 0s with 1 to get min possible equal sum
        long minSum1 = sum1 + count1;
        long minSum2 = sum2 + count2;

        return Math.max(minSum1, minSum2);
    }
}
