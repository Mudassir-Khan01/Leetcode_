class Solution {
    public String removeStars(String s) {
        Stack<Character> stack = new Stack<>();   // Stack to keep non-star characters
        StringBuilder ans = new StringBuilder();  // To store the result
        
        // Traverse each character in the string
        for (char ch : s.toCharArray()) {
            if (ch != '*') {
                stack.push(ch);  // Push non-star characters
            } else {
                stack.pop();     // Remove closest non-star character
            }
        }
        
        // Build the result from the stack
        while (!stack.isEmpty()) {
            ans.append(stack.pop());  // Append characters from stack to StringBuilder
        }
        
        ans.reverse();  // Reverse the StringBuilder to correct the order of characters
        return ans.toString();  // Return the final result
    }
}


class Solution {
    public String removeStars(String s) {
        
        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < s.length(); i++) {
            char currChar = s.charAt(i);

            if (currChar == '*') {
                if (!sb.isEmpty()) {
                    sb.setLength(sb.length() - 1);
                }
            } else {
                sb.append(currChar);
            }
        }

        return sb.toString();
    }
}
