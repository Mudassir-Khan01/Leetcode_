/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root==null){
            return true;
        }
        return helper(root.left, root.right); // traverse left and right
    }
    private boolean helper(TreeNode left, TreeNode right){  
        if(left==null || right ==null){  // if either is null then check if left is equal to right or not
            return left==right;
        }

        return (left.val==right.val && helper(left.left, right.right) && helper(left.right , right.left));  // check for it value , left and right part and right and left part.
    }
}
