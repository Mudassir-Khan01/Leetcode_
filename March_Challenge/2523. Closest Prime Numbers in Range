class Solution {
    public int[] closestPrimes(int left, int right) {
        // mark non prime as false;/prime as true
        boolean prime[]=new boolean[right+1];
        Arrays.fill(prime, true);
        prime[0]=false;
        prime[1]=false;
        // start from 2
        for(int p=2; p*p<=right;p++){
            // if that is prime then the multiple of it will not be prime
            if(prime[p]){
                for(int i=p*p; i<=right;i+=p){
                    prime[i]=false;
                }
            }
        }
        // created sieve of erathomos
        // now find the min diff pair of prime no. btw left and right
        int res[]=new int[]{-1,-1};
        int minDiff=Integer.MAX_VALUE;
        int prev=-1;
        for(int i=left;i<=right;i++){
            // if that is prime then store it prev
            if(prime[i]){
                // no other element in prev then
                if(prev==-1){
                    prev=i;
                }else{
                    if(i-prev<minDiff){
                        // got the minDiff 
                        res[0]=prev;
                        res[1]=i;
                        minDiff=i-prev;
                    }
                    // new prev will be i
                    prev=i;
                }
            }
        }
        return res;
    }
}
