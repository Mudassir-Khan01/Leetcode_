class Solution {
    public int robotSim(int[] commands, int[][] obstacles) {
        int [][]directions={{0,1},{1,0},{0,-1},{-1,0}}; //North , East, South, West respectively
        int directionIndex=0; //to keep track of the current direction
        int x=0 , y=0; //starting position
        int maxDist=0; 

        //convert obstacles array into a set of strings for fast loopkup
        Set<String> obstacleSet=new HashSet<>();
        for(int []obstacle:obstacles){
            obstacleSet.add(obstacle[0]+","+obstacle[1]);
        }

        for(int command:commands){
            if(command==-1){
                //Turn Right
                directionIndex=(directionIndex+1)%4; //East at index 1
            }else if(command==-2){//turn left
                directionIndex=(directionIndex+3)%4; //West at Index 3
            }else{
                //Move forward command steps
                for(int i=0;i<command;i++){
                    int nextX=x+directions[directionIndex][0]; //next position of x and y
                    int nextY=y+directions[directionIndex][1];
                    if(!obstacleSet.contains(nextX+","+nextY)){  // if not ibstacle then update x and y
                        x=nextX;
                        y=nextY;
                        maxDist=Math.max(maxDist,x*x+y*y);
                    }else{
                        break; // if obstacle is there then break from where you are currently
                    }
                }
            }
        }
        return maxDist;
    }
}
