class Solution {
    public int[] xorQueries(int[] arr, int[][] queries) {
        int n=arr.length;
        int prefix[]=new int[n];  //prefix sum
        prefix[0]=arr[0]; // store the first element
        for(int i=1;i<n;i++){
            prefix[i]=arr[i]^prefix[i-1];  // start fro  i=1 and keep on storing xor of current element in arr and prev elelment in prefix
        }
        int[]ans=new int[queries.length];
        for(int i=0;i<queries.length;i++){
            int left=queries[i][0];   // left 
            int right=queries[i][1]; //right
            if(left==0){
                // if left is 0 then simply get the prefix of right
                ans[i]=prefix[right];
            }else{
                // if left is not 0 then prefix[right]^ prefix[left-1] , this will eliminate the extra prefix 
                ans[i]=prefix[right] ^ prefix[left-1];
            }
        }
        return ans;
    }
}
