class Solution {
    public List<Integer> diffWaysToCompute(String expression) {
        //Recursion
        List<Integer> ans=new ArrayList<>();
        for(int i=0;i<expression.length();i++){  // start traversing each character
            char ch=expression.charAt(i);
            if(ch=='+' || ch=='-' || ch=='*'){
                // if + - or * arrives , get its left and right string and  begin recursion 
                String left=expression.substring(0,i);
                String right=expression.substring(i+1);
                // Now call rescurrion
                List<Integer> leftAns=diffWaysToCompute(left);
                List<Integer> rightAns=diffWaysToCompute(right);
                // now we have seperate number and operator
                //so now traverse each and add it in ans
                for(int x:leftAns){
                    for(int y:rightAns){
                        if(ch=='+'){
                            ans.add(x+y);
                        }else if(ch=='-'){
                            ans.add(x-y);
                        }else{
                            ans.add(x*y);
                        }
                    }
                }
            }
        }
        // if there are no expression
        if(ans.size()==0) 
        ans.add(Integer.parseInt(expression));

        return ans;
    }
}
