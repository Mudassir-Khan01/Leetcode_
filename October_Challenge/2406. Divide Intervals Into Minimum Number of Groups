class Solution {
    public int minGroups(int[][] intervals) {
        // first get min and max value in the array
        int min= Integer.MAX_VALUE;
        int max=Integer.MIN_VALUE;
        int n=intervals.length;
        for(int i=0;i<n;i++){
            min=Math.min(min,intervals[i][0]);
            max=Math.max(max,intervals[i][1]);
        }
        // now create the array to store frequency of each start and end
        int eventCount[] =new int[max+2];
        // now travserse the intervals and increase count at start and decrease at end+1
        for(int i=0;i<n;i++){
            eventCount[intervals[i][0]]++;
            eventCount[intervals[i][1]+1]--;  // end+1
        }

        // now we calculate prefix sum and find the maxm overlap
        int sum=0;
        int maxOverlaps=0;
        for(int i=min;i<max+2;i++){
            sum+=eventCount[i];
            maxOverlaps=Math.max(maxOverlaps,sum);
        }
        return maxOverlaps;
    }
}
