class Solution { // 2 method - dfs and this
    public List<Integer> lexicalOrder(int n) {
        List<Integer> ans=new ArrayList<>();
        int curr=1;
        for(int i=0;i<n;i++){
            ans.add(curr); // add the current element
            // now go through its sequence of 10
            if(curr*10<=n){
                curr*=10;
            }else{
                // if it exceeds then go through it next elements ie 11,12,13,14....
                // first check whether it reaches it end value i.e 9 or 19 or 29... or it reaches the ned
                while(curr%10==9 || curr>=n){
                    curr/=10;
                }
                // increase the value
                curr++;
            }
        }
        return ans;
    }
}
