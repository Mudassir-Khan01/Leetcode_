class Solution {
    public String[] divideString(String s, int k, char fill) {
        int n = s.length();

        // Calculate number of groups needed (ceiling of n/k)
        int groups = (n % k == 0) ? n / k : (n / k + 1);

        String[] result = new String[groups]; // Output array
        int index = 0; // Index to fill result array

        // Iterate over string in steps of k
        for (int i = 0; i < n; i += k) {
            StringBuilder group = new StringBuilder();

            // Build each group of size k
            for (int j = 0; j < k; j++) {
                if (i + j < n) {
                    group.append(s.charAt(i + j)); // Normal character
                } else {
                    group.append(fill); // Padding with fill char if out of bounds
                }
            }

            result[index++] = group.toString(); // Store the group
        }

        return result;
    }
}
